Skyler Kessenich and Julian Bowers


This file contains the CLI designs for the books project

Before doing any of these operations, we are first going to put our books info into a data structure for convientent data access. We are going to put each book into a list and for each book in the list, we will create a sub array with three entries, title, author and year. We will call the parent list B and the sublist Bi where i is a book in B. 

1. Given a search string S, print a list of books whose titles contain S (case-insensitive). Books may be sorted by title or by publication year.
Usage: This CLI will take in a string name and output a list of potenteial book titles. Unless flagged, this function will be sorted by the title of the book but if flagged, it will be sorted by publication year. 

Syntax: python3 books.py getTitles(books, title, sortingMethod)
- here books is the list of books, title is the string to be searched for and sortingMethod ius the method with which to sort. 

Algorithm:
- Input: a String S
- Outpus: A list of books containing S in the title. 

Steps:

i. Initialize a pointer p to the first character of the substring S and a list that is the titles to be returned called titles.
ii. For every book i in our data set, we will access Bi[0] aka the title of the book. ii. For ever charater c in Bi[0], if c=p then go to the next character c and incriment p to the next character in S. if c != p then set p to be the first character in S and check again. If there are no more characters in S then add Bi to titles.


2. Given a search string S, print a list of authors whose names contain S (case-insensitive). For each such author, print a list of the author's books. Authors should be printed in alphabetical order by surname, breaking ties by using given name (e.g. Ann Brontë comes before Charlotte Brontë).
Usage: This CLI will allow a user to search to see what books a specffic author has written. Given an authors name it will print out that name followed by every book they have written. 

Syntax: python3 books.py getAuthors(books, author)
-here books is the dataset of books and author is the string S containing the potential author name. 

Algorithm:
-Input: A author name S
-Output: A list of author names who contain S

 Steps:
 i. Initialze a hash table called A and a hash function h() which takes in an author a* and returns a list.  called A which will contain an array with two entries, author name in index 0 and a list of books in index 1. 
 ii. The matching process will be the same as in problem one. If a match is found, add the name of the book to the index for that author 

3. Given a range of years A to B, print a list of books published between years A and B, inclusive. Books should be printed in order of publication year.
Usage: This function will take in two parameters start and finish. This function will return the titles of all books between those two years in sorted order. If no books are in this range nothing will be returned. 

Syntax: python3 books.py bookInYears(start, finish):
-start is the first year and finish is the end year

4. If the user requests a usage statement (via a suitable command-line flag) or if the user's command-line syntax is invalid, print a suitable usage statement.
Usage: This function displays the usage and syntax of the other command line interface tools when called. If called directly, it will take in one of the other command line functions as an argument and display that given functions usage statment. The other time it is invoked is when the syntax of one of the functions is wrong in which case, it will automatically print the usage and syntax of that given funciton.

Syntax: python3 books.py usage(function)
-function is the desired function to have the usage and syntax displayed of. 
